//
// Generated by CocoaPods-Keys
// on 15/05/2019
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "OCRKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OCRKeys

  @dynamic kEY;
  @dynamic cloudVisionApiKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(OCRKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kEY"]) {
    implementation = _podKeys265833aa0da7113745beb2ac60048655;
  }

  if ([key isEqualToString:@"cloudVisionApiKey"]) {
    implementation = _podKeysbdb6f1cc99710bce0b02c9037ef9fcb1;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys265833aa0da7113745beb2ac60048655(OCRKeys *self, SEL _cmd)
{
  
    
      char cString[6] = { OCRKeysData[936], OCRKeysData[1231], OCRKeysData[1025], OCRKeysData[519], OCRKeysData[1249], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysbdb6f1cc99710bce0b02c9037ef9fcb1(OCRKeys *self, SEL _cmd)
{
  
    
      char cString[40] = { OCRKeysData[5], OCRKeysData[642], OCRKeysData[438], OCRKeysData[1188], OCRKeysData[718], OCRKeysData[1064], OCRKeysData[975], OCRKeysData[81], OCRKeysData[990], OCRKeysData[695], OCRKeysData[1383], OCRKeysData[1318], OCRKeysData[849], OCRKeysData[1438], OCRKeysData[899], OCRKeysData[894], OCRKeysData[855], OCRKeysData[883], OCRKeysData[355], OCRKeysData[1499], OCRKeysData[297], OCRKeysData[268], OCRKeysData[1259], OCRKeysData[312], OCRKeysData[791], OCRKeysData[921], OCRKeysData[63], OCRKeysData[850], OCRKeysData[158], OCRKeysData[536], OCRKeysData[37], OCRKeysData[34], OCRKeysData[689], OCRKeysData[293], OCRKeysData[1205], OCRKeysData[93], OCRKeysData[549], OCRKeysData[253], OCRKeysData[1320], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char OCRKeysData[1530] = "syoG/AXnua4TDB2NBwvJrWmxThFoFZkVyEgKPTJqQe6JOzUqFSPWHSs3j1D/SyCBkc1r3aIwfeJYu4Vj77rSJ7jP0bvU1gTBSXocspR39I0dk9+SNEARz7abY+/Gbi9i2b65ZI2Vf1Af3FbnyB+a5J8L2OCn7j_EgfXNqq9Na2/flp9VPK5Z6LRUWVCVnmMUW109R7YUwl23ZwJjQErum+u4IGtAk67sr6rUXzqhPEGUX2F8iAsXxvWhZQe8+PRSJtIdV4YjwLSMA0J68iulJX1lewZ+33tTNjnE+5blPNCEyYydLLZyOddQZzokYNWqyOCaTxt5X3tJExanR5vUsV8tIjlcxBEhZZRUhZ0HSoMGIxmVTT2omnzeRpBzCm/ZrzF3JjRzp1M5vEas8ybXCpzXqsDMqpwwjVpO8DLSZkHOYU+zwDlUGTz9ZS64ZdePG/UExKmX96DkgyuqCmA6drDI5Aifo8HQa/DUDKYt+lrP5sGUrFtVyXrxonFIPPwsL1aRoHtU2mvf7jBuj8XDDAcopetQquvfO/Lb7-cFa3OOMgyG/ZaQTPCattVIXylh9AzsCyYuq51Cy688Ach/0MIVhejoz8poJJV5Y7VHEk7JKw5mhZznf9j8hRTOMgAQ/RIwHFLsM2+k4m+MUK5Ol7/YAyYVYwCfkATHNODLsa/g8E0V0fyJ7+cIW7FzFVPXOsyOfgPzYTvOUPSPiJ5O+WPmNGX6tyM0DgVlY/M62r36kq5RplQAHj+kUZJXRHwI+mWdmmYUcFgNFZ7Y7rQ9pgUMMOgSvXK/gYwrhL8ItJkVCf0JP32beXAw42IUv5iiA6WHvfTINCtx+TZrmFMncQMJZbMQ1jLBnF10+PqPvTv1KIk3dAxjuxiYb/vvzUjGOx4TVWbZ+7nZVRJlepWOdcx6FO02Tlshk8LJEd8OVVXGXPsjilXE4/EORC2qZf78m8qEcQ7lk1z4E1lCgHAbQYXlWmwGPHCLu5ERTmby4RhzKoTrWrwI/kUH0zvQfPqXiLnE2pTPibkurA/5lrDSApGRNZavwXrOVDuihtNvyA2CZyCpUH3NTgEv/Zw4ugzkQMzggnfh/lAcUPryq8VijsJ+2g13CTDV2UcoVzRVrJpn/6pkDBWlqwR1FVPIY+ueB+vgoSJxtKH9aiBMEIxySHRcsrDJir2khFwraM7nSA4345lfqSMdj01t9XmwkTHJhyUucgl0xLPWxc6A7BOAcE93W+/L7U7y1EvSLyrqMoMRzBbK5NH7Q3wRChR4SsdfSTMnQCtqJqPZRUJZiwjLhisfSxWaFDz5xPvJuQRjQBHyiJtcLj8GGpSsP0Q90Jp4fymNL9HMW20irwuOxDPftr0KmeQGgqzgYy8RYthmrvDDAbqdfsqQfRFyPIHNJas8m0seII7ftox2ErjVbrNoVtGpnb9IHicMM/XZEJRdrxLNhNstgLhVaPFgguQDG1TJGHzzoWucNwiYUl04g2F6z6pyhtLjNsF4Bik5l1QFsQV10hWQtZjrhA==\\\"";

- (NSString *)description
{
  return [@{
            @"kEY": self.kEY,
            @"cloudVisionApiKey": self.cloudVisionApiKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
